package com.masterkenth;

import java.util.Map;
import static java.util.Map.entry;
import net.runelite.api.ItemID;

// All tables have been manually scraped from osrs wiki
// Tables only contain (subjectively) rare drops so that if a drop matches against a table it is always posted to Discord
public final class RarityTables {
  private static final Map<Integer, Float> TABLE_BARROWS = Map.ofEntries(
    entry(ItemID.AHRIMS_HOOD,           7.0f / 102.0f),
    entry(ItemID.AHRIMS_ROBETOP,        7.0f / 102.0f),
    entry(ItemID.AHRIMS_ROBESKIRT,      7.0f / 102.0f),
    entry(ItemID.AHRIMS_STAFF,          7.0f / 102.0f),
    entry(ItemID.DHAROKS_HELM,          7.0f / 102.0f),
    entry(ItemID.DHAROKS_PLATEBODY,     7.0f / 102.0f),
    entry(ItemID.DHAROKS_PLATELEGS,     7.0f / 102.0f),
    entry(ItemID.DHAROKS_GREATAXE,      7.0f / 102.0f),
    entry(ItemID.GUTHANS_HELM,          7.0f / 102.0f),
    entry(ItemID.GUTHANS_PLATEBODY,     7.0f / 102.0f),
    entry(ItemID.GUTHANS_CHAINSKIRT,    7.0f / 102.0f),
    entry(ItemID.GUTHANS_WARSPEAR,      7.0f / 102.0f),
    entry(ItemID.KARILS_COIF,           7.0f / 102.0f),
    entry(ItemID.KARILS_LEATHERTOP,     7.0f / 102.0f),
    entry(ItemID.KARILS_LEATHERSKIRT,   7.0f / 102.0f),
    entry(ItemID.KARILS_CROSSBOW,       7.0f / 102.0f),
    entry(ItemID.TORAGS_HELM,           7.0f / 102.0f),
    entry(ItemID.TORAGS_PLATEBODY,      7.0f / 102.0f),
    entry(ItemID.TORAGS_PLATELEGS,      7.0f / 102.0f),
    entry(ItemID.TORAGS_HAMMERS,        7.0f / 102.0f),
    entry(ItemID.VERACS_HELM,           7.0f / 102.0f),
    entry(ItemID.VERACS_BRASSARD,       7.0f / 102.0f),
    entry(ItemID.VERACS_PLATESKIRT,     7.0f / 102.0f),
    entry(ItemID.VERACS_FLAIL,          7.0f / 102.0f),

    entry(ItemID.LOOP_HALF_OF_KEY,      7.0f / 102.0f),
    entry(ItemID.TOOTH_HALF_OF_KEY,     7.0f / 102.0f),
    entry(ItemID.DRAGON_MED_HELM,       7.0f / 102.0f)
  );

  private static final Map<Integer, Float> TABLE_CHAMBERS_OF_XERIC = Map.ofEntries(
    entry(ItemID.DEXTEROUS_PRAYER_SCROLL, 0.2899f),
    entry(ItemID.ARCANE_PRAYER_SCROLL   , 0.2899f),
    entry(ItemID.TWISTED_BUCKLER        , 0.058f),
    entry(ItemID.DRAGON_HUNTER_CROSSBOW , 0.058f),
    entry(ItemID.DINHS_BULWARK          , 0.0435f),
    entry(ItemID.ANCESTRAL_HAT          , 0.0435f),
    entry(ItemID.ANCESTRAL_ROBE_TOP     , 0.0435f),
    entry(ItemID.ANCESTRAL_ROBE_BOTTOM  , 0.0435f),
    entry(ItemID.DRAGON_CLAWS           , 0.0435f),
    entry(ItemID.ELDER_MAUL             , 0.029f),
    entry(ItemID.KODAI_INSIGNIA         , 0.029f),
    entry(ItemID.TWISTED_BOW            , 0.029f),

    entry(ItemID.TWISTED_ANCESTRAL_COLOUR_KIT , 0f       ),
    entry(ItemID.METAMORPHIC_DUST             , 1f / 400f)
  );

  private static final Map<Integer, Float> TABLE_THEATRE_OF_BLOOD = Map.ofEntries(
    entry(ItemID.AVERNIC_DEFENDER_HILT, 1f / 21.61f),
    entry(ItemID.GHRAZI_RAPIER        , 1f / 86.45f),
    entry(ItemID.SANGUINESTI_STAFF    , 1f / 86.45f),
    entry(ItemID.JUSTICIAR_FACEGUARD  , 1f / 86.45f),
    entry(ItemID.JUSTICIAR_CHESTGUARD , 1f / 86.45f),
    entry(ItemID.JUSTICIAR_LEGGUARDS  , 1f / 86.45f),
    entry(ItemID.SCYTHE_OF_VITUR      , 1f / 172.9f)
  );

  private static final Map<Integer, Float> TABLE_CLUE_SCROLL_BEGINNER = Map.ofEntries(
    entry(ItemID.MOLE_SLIPPERS                       , 1f / 360f),
    entry(ItemID.FROG_SLIPPERS                       , 1f / 360f),
    entry(ItemID.BEAR_FEET                           , 1f / 360f),
    entry(ItemID.DEMON_FEET                          , 1f / 360f),
    entry(ItemID.JESTER_CAPE                         , 1f / 360f),
    entry(ItemID.SHOULDER_PARROT                     , 1f / 360f),
    entry(ItemID.MONKS_ROBE_TOP_T                    , 1f / 360f),
    entry(ItemID.MONKS_ROBE_T                        , 1f / 360f),
    entry(ItemID.AMULET_OF_DEFENCE_T                 , 1f / 360f),
    entry(ItemID.SANDWICH_LADY_HAT                   , 1f / 360f),
    entry(ItemID.SANDWICH_LADY_TOP                   , 1f / 360f),
    entry(ItemID.SANDWICH_LADY_BOTTOM                , 1f / 360f),
    entry(ItemID.RUNE_SCIMITAR_ORNAMENT_KIT_GUTHIX   , 1f / 360f),
    entry(ItemID.RUNE_SCIMITAR_ORNAMENT_KIT_SARADOMIN, 1f / 360f),
    entry(ItemID.RUNE_SCIMITAR_ORNAMENT_KIT_ZAMORAK  , 1f / 360f),

    entry(ItemID.BLACK_2H_SWORD  , 1f / 805.1f),
    entry(ItemID.BLACK_AXE       , 1f / 805.1f),
    entry(ItemID.BLACK_BATTLEAXE , 1f / 805.1f),
    entry(ItemID.BLACK_CHAINBODY , 1f / 805.1f),
    entry(ItemID.BLACK_DAGGER    , 1f / 805.1f),
    entry(ItemID.BLACK_FULL_HELM , 1f / 805.1f),
    entry(ItemID.BLACK_KITESHIELD, 1f / 805.1f),
    entry(ItemID.BLACK_LONGSWORD , 1f / 805.1f),
    entry(ItemID.BLACK_MACE      , 1f / 805.1f),
    entry(ItemID.BLACK_MED_HELM  , 1f / 805.1f),
    entry(ItemID.BLACK_PICKAXE   , 1f / 805.1f),
    entry(ItemID.BLACK_PLATEBODY , 1f / 805.1f),
    entry(ItemID.BLACK_PLATESKIRT, 1f / 805.1f),
    entry(ItemID.BLACK_PLATELEGS , 1f / 805.1f),
    entry(ItemID.BLACK_SQ_SHIELD , 1f / 805.1f),
    entry(ItemID.BLACK_SCIMITAR  , 1f / 805.1f),
    entry(ItemID.BLACK_SWORD     , 1f / 805.1f),
    entry(ItemID.BLACK_WARHAMMER , 1f / 805.1f)
  );

  private static final Map<Integer, Float> TABLE_CLUE_SCROLL_EASY = Map.ofEntries(
    entry(ItemID.AMULET_OF_MAGIC_T   , 1f / 360f),
    entry(ItemID.WOODEN_SHIELD_G     , 1f / 1404f),
    entry(ItemID.BLACK_FULL_HELM_T   , 1f / 1404f),
    entry(ItemID.BLACK_PLATEBODY_T   , 1f / 1404f),
    entry(ItemID.BLACK_PLATELEGS_T   , 1f / 1404f),
    entry(ItemID.BLACK_PLATESKIRT_T  , 1f / 1404f),
    entry(ItemID.BLACK_KITESHIELD_T  , 1f / 1404f),
    entry(ItemID.BLACK_FULL_HELM_G   , 1f / 1404f),
    entry(ItemID.BLACK_PLATEBODY_G   , 1f / 1404f),
    entry(ItemID.BLACK_PLATELEGS_G   , 1f / 1404f),
    entry(ItemID.BLACK_PLATESKIRT_G  , 1f / 1404f),
    entry(ItemID.BLACK_KITESHIELD_G  , 1f / 1404f),
    entry(ItemID.BLACK_SHIELD_H1     , 1f / 1404f),
    entry(ItemID.BLACK_SHIELD_H2     , 1f / 1404f),
    entry(ItemID.BLACK_SHIELD_H3     , 1f / 1404f),
    entry(ItemID.BLACK_SHIELD_H4     , 1f / 1404f),
    entry(ItemID.BLACK_SHIELD_H5     , 1f / 1404f),
    entry(ItemID.BLACK_HELM_H1       , 1f / 1404f),
    entry(ItemID.BLACK_HELM_H2       , 1f / 1404f),
    entry(ItemID.BLACK_HELM_H3       , 1f / 1404f),
    entry(ItemID.BLACK_HELM_H4       , 1f / 1404f),
    entry(ItemID.BLACK_HELM_H5       , 1f / 1404f),
    entry(ItemID.BLACK_PLATEBODY_H1  , 1f / 1404f),
    entry(ItemID.BLACK_PLATEBODY_H2  , 1f / 1404f),
    entry(ItemID.BLACK_PLATEBODY_H3  , 1f / 1404f),
    entry(ItemID.BLACK_PLATEBODY_H4  , 1f / 1404f),
    entry(ItemID.BLACK_PLATEBODY_H5  , 1f / 1404f),
    entry(ItemID.STEEL_FULL_HELM_T   , 1f / 1404f),
    entry(ItemID.STEEL_PLATEBODY_T   , 1f / 1404f),
    entry(ItemID.STEEL_PLATELEGS_T   , 1f / 1404f),
    entry(ItemID.STEEL_PLATESKIRT_T  , 1f / 1404f),
    entry(ItemID.STEEL_KITESHIELD_T  , 1f / 1404f),
    entry(ItemID.STEEL_FULL_HELM_G   , 1f / 1404f),
    entry(ItemID.STEEL_PLATEBODY_G   , 1f / 1404f),
    entry(ItemID.STEEL_PLATELEGS_G   , 1f / 1404f),
    entry(ItemID.STEEL_PLATESKIRT_G  , 1f / 1404f),
    entry(ItemID.STEEL_KITESHIELD_G  , 1f / 1404f),
    entry(ItemID.IRON_FULL_HELM_T    , 1f / 1404f),
    entry(ItemID.IRON_PLATEBODY_T    , 1f / 1404f),
    entry(ItemID.IRON_PLATELEGS_T    , 1f / 1404f),
    entry(ItemID.IRON_PLATESKIRT_T   , 1f / 1404f),
    entry(ItemID.IRON_KITESHIELD_T   , 1f / 1404f),
    entry(ItemID.IRON_FULL_HELM_G    , 1f / 1404f),
    entry(ItemID.IRON_PLATEBODY_G    , 1f / 1404f),
    entry(ItemID.IRON_PLATELEGS_G    , 1f / 1404f),
    entry(ItemID.IRON_PLATESKIRT_G   , 1f / 1404f),
    entry(ItemID.IRON_KITESHIELD_G   , 1f / 1404f),
    entry(ItemID.BRONZE_FULL_HELM_T  , 1f / 1404f),
    entry(ItemID.BRONZE_PLATEBODY_T  , 1f / 1404f),
    entry(ItemID.BRONZE_PLATELEGS_T  , 1f / 1404f),
    entry(ItemID.BRONZE_PLATESKIRT_T , 1f / 1404f),
    entry(ItemID.BRONZE_KITESHIELD_T , 1f / 1404f),
    entry(ItemID.BRONZE_FULL_HELM_G  , 1f / 1404f),
    entry(ItemID.BRONZE_PLATEBODY_G  , 1f / 1404f),
    entry(ItemID.BRONZE_PLATELEGS_G  , 1f / 1404f),
    entry(ItemID.BRONZE_PLATESKIRT_G , 1f / 1404f),
    entry(ItemID.BRONZE_KITESHIELD_G , 1f / 1404f),
    entry(ItemID.STUDDED_BODY_G      , 1f / 1404f),
    entry(ItemID.STUDDED_CHAPS_G     , 1f / 1404f),
    entry(ItemID.STUDDED_BODY_T      , 1f / 1404f),
    entry(ItemID.STUDDED_CHAPS_T     , 1f / 1404f),
    entry(ItemID.LEATHER_BODY_G      , 1f / 1404f),
    entry(ItemID.LEATHER_CHAPS_G     , 1f / 1404f),
    entry(ItemID.BLUE_WIZARD_HAT_G   , 1f / 1404f),
    entry(ItemID.BLUE_WIZARD_ROBE_G  , 1f / 1404f),
    entry(ItemID.BLUE_SKIRT_G        , 1f / 1404f),
    entry(ItemID.BLUE_WIZARD_HAT_T   , 1f / 1404f),
    entry(ItemID.BLUE_WIZARD_ROBE_T  , 1f / 1404f),
    entry(ItemID.BLUE_SKIRT_T        , 1f / 1404f),
    entry(ItemID.BLACK_WIZARD_HAT_G  , 1f / 1404f),
    entry(ItemID.BLACK_WIZARD_ROBE_G , 1f / 1404f),
    entry(ItemID.BLACK_SKIRT_G       , 1f / 1404f),
    entry(ItemID.BLACK_WIZARD_HAT_T  , 1f / 1404f),
    entry(ItemID.BLACK_WIZARD_ROBE_T , 1f / 1404f),
    entry(ItemID.BLACK_SKIRT_T       , 1f / 1404f),
    entry(ItemID.SARADOMIN_ROBE_TOP  , 1f / 1404f),
    entry(ItemID.SARADOMIN_ROBE_LEGS , 1f / 1404f),
    entry(ItemID.GUTHIX_ROBE_TOP     , 1f / 1404f),
    entry(ItemID.GUTHIX_ROBE_LEGS    , 1f / 1404f),
    entry(ItemID.ZAMORAK_ROBE_TOP    , 1f / 1404f),
    entry(ItemID.ZAMORAK_ROBE_LEGS   , 1f / 1404f),
    entry(ItemID.ANCIENT_ROBE_TOP    , 1f / 1404f),
    entry(ItemID.ANCIENT_ROBE_LEGS   , 1f / 1404f),
    entry(ItemID.ARMADYL_ROBE_TOP    , 1f / 1404f),
    entry(ItemID.ARMADYL_ROBE_LEGS   , 1f / 1404f),
    entry(ItemID.BANDOS_ROBE_TOP     , 1f / 1404f),
    entry(ItemID.BANDOS_ROBE_LEGS    , 1f / 1404f),
    entry(ItemID.BOBS_RED_SHIRT      , 1f / 1404f),
    entry(ItemID.BOBS_GREEN_SHIRT    , 1f / 1404f),
    entry(ItemID.BOBS_BLUE_SHIRT     , 1f / 1404f),
    entry(ItemID.BOBS_BLACK_SHIRT    , 1f / 1404f),
    entry(ItemID.BOBS_PURPLE_SHIRT   , 1f / 1404f),
    entry(ItemID.HIGHWAYMAN_MASK     , 1f / 1404f),
    entry(ItemID.BLUE_BERET          , 1f / 1404f),
    entry(ItemID.BLACK_BERET         , 1f / 1404f),
    entry(ItemID.RED_BERET           , 1f / 1404f),
    entry(ItemID.WHITE_BERET         , 1f / 1404f),
    entry(ItemID.A_POWDERED_WIG      , 1f / 1404f),
    entry(ItemID.BEANIE              , 1f / 1404f),
    entry(ItemID.IMP_MASK            , 1f / 1404f),
    entry(ItemID.GOBLIN_MASK         , 1f / 1404f),
    entry(ItemID.SLEEPING_CAP        , 1f / 1404f),
    entry(ItemID.FLARED_TROUSERS     , 1f / 1404f),
    entry(ItemID.PANTALOONS          , 1f / 1404f),
    entry(ItemID.BLACK_CANE          , 1f / 1404f),
    entry(ItemID.STAFF_OF_BOB_THE_CAT, 1f / 1404f),
    entry(ItemID.AMULET_OF_POWER_T   , 1f / 1404f),
    entry(ItemID.HAM_JOINT           , 1f / 1404f),
    entry(ItemID.RAIN_BOW            , 1f / 1404f),
    entry(ItemID.GOLDEN_CHEFS_HAT    , 1f / 2808f),
    entry(ItemID.GOLDEN_APRON        , 1f / 2808f),
    entry(ItemID.RED_ELEGANT_SHIRT   , 1f / 2808f),
    entry(ItemID.RED_ELEGANT_BLOUSE  , 1f / 2808f),
    entry(ItemID.RED_ELEGANT_LEGS    , 1f / 2808f),
    entry(ItemID.RED_ELEGANT_SKIRT   , 1f / 2808f),
    entry(ItemID.GREEN_ELEGANT_SHIRT , 1f / 2808f),
    entry(ItemID.GREEN_ELEGANT_BLOUSE, 1f / 2808f),
    entry(ItemID.GREEN_ELEGANT_LEGS  , 1f / 2808f),
    entry(ItemID.GREEN_ELEGANT_SKIRT , 1f / 2808f),
    entry(ItemID.BLUE_ELEGANT_SHIRT  , 1f / 2808f),
    entry(ItemID.BLUE_ELEGANT_BLOUSE , 1f / 2808f),
    entry(ItemID.BLUE_ELEGANT_LEGS   , 1f / 2808f),
    entry(ItemID.BLUE_ELEGANT_SKIRT  , 1f / 2808f),
    entry(ItemID.TEAM_CAPE_ZERO      , 1f / 5616f),
    entry(ItemID.TEAM_CAPE_I         , 1f / 5616f),
    entry(ItemID.TEAM_CAPE_X         , 1f / 5616f),
    entry(ItemID.CAPE_OF_SKULLS      , 1f / 5616f),
    entry(ItemID.MONKS_ROBE_TOP_G    , 1f / 14040f),
    entry(ItemID.MONKS_ROBE_G        , 1f / 14040f),

    entry(ItemID.WILLOW_COMP_BOW                    , 1f / 360f),

    entry(ItemID.RED_FIRELIGHTER                    , 1.0f / 180f),
    entry(ItemID.GREEN_FIRELIGHTER                  , 1.0f / 180f),
    entry(ItemID.BLUE_FIRELIGHTER                   , 1.0f / 180f),
    entry(ItemID.PURPLE_FIRELIGHTER                 , 1.0f / 180f),
    entry(ItemID.WHITE_FIRELIGHTER                  , 1.0f / 180f),
    entry(ItemID.CHARGE_DRAGONSTONE_JEWELLERY_SCROLL, 1.0f / 452.6f),
    entry(ItemID.NARDAH_TELEPORT                    , 1.0f / 452.6f),
    entry(ItemID.MOS_LEHARMLESS_TELEPORT            , 1.0f / 452.6f),
    entry(ItemID.MORTTON_TELEPORT                   , 1.0f / 452.6f),
    entry(ItemID.FELDIP_HILLS_TELEPORT              , 1.0f / 452.6f),
    entry(ItemID.LUNAR_ISLE_TELEPORT                , 1.0f / 452.6f),
    entry(ItemID.DIGSITE_TELEPORT                   , 1.0f / 452.6f),
    entry(ItemID.PISCATORIS_TELEPORT                , 1.0f / 452.6f),
    entry(ItemID.PEST_CONTROL_TELEPORT              , 1.0f / 452.6f),
    entry(ItemID.TAI_BWO_WANNAI_TELEPORT            , 1.0f / 452.6f),
    entry(ItemID.LUMBERYARD_TELEPORT                , 1.0f / 452.6f),
    entry(ItemID.IORWERTH_CAMP_TELEPORT             , 1.0f / 452.6f),
    entry(ItemID.MASTER_SCROLL_BOOK_EMPTY           , 1.0f / 792f),
    entry(ItemID.SARADOMIN_PAGE_1                   , 1.0f / 864f),
    entry(ItemID.SARADOMIN_PAGE_2                   , 1.0f / 864f),
    entry(ItemID.SARADOMIN_PAGE_3                   , 1.0f / 864f),
    entry(ItemID.SARADOMIN_PAGE_4                   , 1.0f / 864f),
    entry(ItemID.ZAMORAK_PAGE_1                     , 1.0f / 864f),
    entry(ItemID.ZAMORAK_PAGE_2                     , 1.0f / 864f),
    entry(ItemID.ZAMORAK_PAGE_3                     , 1.0f / 864f),
    entry(ItemID.ZAMORAK_PAGE_4                     , 1.0f / 864f),
    entry(ItemID.GUTHIX_PAGE_1                      , 1.0f / 864f),
    entry(ItemID.GUTHIX_PAGE_2                      , 1.0f / 864f),
    entry(ItemID.GUTHIX_PAGE_3                      , 1.0f / 864f),
    entry(ItemID.GUTHIX_PAGE_4                      , 1.0f / 864f),
    entry(ItemID.BANDOS_PAGE_1                      , 1.0f / 864f),
    entry(ItemID.BANDOS_PAGE_2                      , 1.0f / 864f),
    entry(ItemID.BANDOS_PAGE_3                      , 1.0f / 864f),
    entry(ItemID.BANDOS_PAGE_4                      , 1.0f / 864f),
    entry(ItemID.ARMADYL_PAGE_1                     , 1.0f / 864f),
    entry(ItemID.ARMADYL_PAGE_2                     , 1.0f / 864f),
    entry(ItemID.ARMADYL_PAGE_3                     , 1.0f / 864f),
    entry(ItemID.ARMADYL_PAGE_4                     , 1.0f / 864f),
    entry(ItemID.ANCIENT_PAGE_1                     , 1.0f / 864f),
    entry(ItemID.ANCIENT_PAGE_2                     , 1.0f / 864f),
    entry(ItemID.ANCIENT_PAGE_3                     , 1.0f / 864f),
    entry(ItemID.ANCIENT_PAGE_4                     , 1.0f / 864f),
    entry(ItemID.HOLY_BLESSING                      , 1.0f / 2160f),
    entry(ItemID.UNHOLY_BLESSING                    , 1.0f / 2160f),
    entry(ItemID.PEACEFUL_BLESSING                  , 1.0f / 2160f),
    entry(ItemID.WAR_BLESSING                       , 1.0f / 2160f),
    entry(ItemID.HONOURABLE_BLESSING                , 1.0f / 2160f),
    entry(ItemID.ANCIENT_BLESSING                   , 1.0f / 2160f)
  );
  
  private static final Map<Integer, Float> TABLE_CLUE_SCROLL_MEDIUM = Map.ofEntries(
    entry(ItemID.RANGER_BOOTS         , 1f / 1133f),
    entry(ItemID.WIZARD_BOOTS         , 1f / 1133f),
    entry(ItemID.HOLY_SANDALS         , 1f / 1133f),
    entry(ItemID.SPIKED_MANACLES      , 1f / 1133f),
    entry(ItemID.CLIMBING_BOOTS_G     , 1f / 1133f),
    entry(ItemID.ADAMANT_FULL_HELM_T  , 1f / 1133f),
    entry(ItemID.ADAMANT_PLATEBODY_T  , 1f / 1133f),
    entry(ItemID.ADAMANT_PLATELEGS_T  , 1f / 1133f),
    entry(ItemID.ADAMANT_PLATESKIRT_T , 1f / 1133f),
    entry(ItemID.ADAMANT_KITESHIELD_T , 1f / 1133f),
    entry(ItemID.ADAMANT_FULL_HELM_G  , 1f / 1133f),
    entry(ItemID.ADAMANT_PLATEBODY_G  , 1f / 1133f),
    entry(ItemID.ADAMANT_PLATELEGS_G  , 1f / 1133f),
    entry(ItemID.ADAMANT_PLATESKIRT_G , 1f / 1133f),
    entry(ItemID.ADAMANT_KITESHIELD_G , 1f / 1133f),
    entry(ItemID.ADAMANT_SHIELD_H1    , 1f / 1133f),
    entry(ItemID.ADAMANT_SHIELD_H2    , 1f / 1133f),
    entry(ItemID.ADAMANT_SHIELD_H3    , 1f / 1133f),
    entry(ItemID.ADAMANT_SHIELD_H4    , 1f / 1133f),
    entry(ItemID.ADAMANT_SHIELD_H5    , 1f / 1133f),
    entry(ItemID.ADAMANT_HELM_H1      , 1f / 1133f),
    entry(ItemID.ADAMANT_HELM_H2      , 1f / 1133f),
    entry(ItemID.ADAMANT_HELM_H3      , 1f / 1133f),
    entry(ItemID.ADAMANT_HELM_H4      , 1f / 1133f),
    entry(ItemID.ADAMANT_HELM_H5      , 1f / 1133f),
    entry(ItemID.ADAMANT_PLATEBODY_H1 , 1f / 1133f),
    entry(ItemID.ADAMANT_PLATEBODY_H2 , 1f / 1133f),
    entry(ItemID.ADAMANT_PLATEBODY_H3 , 1f / 1133f),
    entry(ItemID.ADAMANT_PLATEBODY_H4 , 1f / 1133f),
    entry(ItemID.ADAMANT_PLATEBODY_H5 , 1f / 1133f),
    entry(ItemID.MITHRIL_FULL_HELM_G  , 1f / 1133f),
    entry(ItemID.MITHRIL_PLATEBODY_G  , 1f / 1133f),
    entry(ItemID.MITHRIL_PLATELEGS_G  , 1f / 1133f),
    entry(ItemID.MITHRIL_PLATESKIRT_G , 1f / 1133f),
    entry(ItemID.MITHRIL_KITESHIELD_G , 1f / 1133f),
    entry(ItemID.MITHRIL_FULL_HELM_T  , 1f / 1133f),
    entry(ItemID.MITHRIL_PLATEBODY_T  , 1f / 1133f),
    entry(ItemID.MITHRIL_PLATELEGS_T  , 1f / 1133f),
    entry(ItemID.MITHRIL_PLATESKIRT_T , 1f / 1133f),
    entry(ItemID.MITHRIL_KITESHIELD_T , 1f / 1133f),
    entry(ItemID.GREEN_DHIDE_BODY_G   , 1f / 1133f),
    entry(ItemID.GREEN_DHIDE_BODY_T   , 1f / 1133f),
    entry(ItemID.GREEN_DHIDE_CHAPS_G  , 1f / 1133f),
    entry(ItemID.GREEN_DHIDE_CHAPS_T  , 1f / 1133f),
    entry(ItemID.SARADOMIN_MITRE      , 1f / 1133f),
    entry(ItemID.SARADOMIN_CLOAK      , 1f / 1133f),
    entry(ItemID.GUTHIX_MITRE         , 1f / 1133f),
    entry(ItemID.GUTHIX_CLOAK         , 1f / 1133f),
    entry(ItemID.ZAMORAK_MITRE        , 1f / 1133f),
    entry(ItemID.ZAMORAK_CLOAK        , 1f / 1133f),
    entry(ItemID.ANCIENT_MITRE        , 1f / 1133f),
    entry(ItemID.ANCIENT_CLOAK        , 1f / 1133f),
    entry(ItemID.ANCIENT_STOLE        , 1f / 1133f),
    entry(ItemID.ANCIENT_CROZIER      , 1f / 1133f),
    entry(ItemID.ARMADYL_MITRE        , 1f / 1133f),
    entry(ItemID.ARMADYL_CLOAK        , 1f / 1133f),
    entry(ItemID.ARMADYL_STOLE        , 1f / 1133f),
    entry(ItemID.ARMADYL_CROZIER      , 1f / 1133f),
    entry(ItemID.BANDOS_MITRE         , 1f / 1133f),
    entry(ItemID.BANDOS_CLOAK         , 1f / 1133f),
    entry(ItemID.BANDOS_STOLE         , 1f / 1133f),
    entry(ItemID.BANDOS_CROZIER       , 1f / 1133f),
    entry(ItemID.RED_BOATER           , 1f / 1133f),
    entry(ItemID.GREEN_BOATER         , 1f / 1133f),
    entry(ItemID.ORANGE_BOATER        , 1f / 1133f),
    entry(ItemID.BLACK_BOATER         , 1f / 1133f),
    entry(ItemID.BLUE_BOATER          , 1f / 1133f),
    entry(ItemID.PINK_BOATER          , 1f / 1133f),
    entry(ItemID.PURPLE_BOATER        , 1f / 1133f),
    entry(ItemID.WHITE_BOATER         , 1f / 1133f),
    entry(ItemID.RED_HEADBAND         , 1f / 1133f),
    entry(ItemID.BLACK_HEADBAND       , 1f / 1133f),
    entry(ItemID.BROWN_HEADBAND       , 1f / 1133f),
    entry(ItemID.WHITE_HEADBAND       , 1f / 1133f),
    entry(ItemID.BLUE_HEADBAND        , 1f / 1133f),
    entry(ItemID.GOLD_HEADBAND        , 1f / 1133f),
    entry(ItemID.PINK_HEADBAND        , 1f / 1133f),
    entry(ItemID.GREEN_HEADBAND       , 1f / 1133f),
    entry(ItemID.CRIER_HAT            , 1f / 1133f),
    entry(ItemID.ADAMANT_CANE         , 1f / 1133f),
    entry(ItemID.CAT_MASK             , 1f / 1133f),
    entry(ItemID.PENGUIN_MASK         , 1f / 1133f),
    entry(ItemID.LEPRECHAUN_HAT       , 1f / 1133f),
    entry(ItemID.CRIER_COAT           , 1f / 1133f),
    entry(ItemID.CRIER_BELL           , 1f / 1133f),
    entry(ItemID.ARCEUUS_BANNER       , 1f / 1133f),
    entry(ItemID.PISCARILIUS_BANNER   , 1f / 1133f),
    entry(ItemID.HOSIDIUS_BANNER      , 1f / 1133f),
    entry(ItemID.SHAYZIEN_BANNER      , 1f / 1133f),
    entry(ItemID.LOVAKENGJ_BANNER     , 1f / 1133f),
    entry(ItemID.CABBAGE_ROUND_SHIELD , 1f / 1133f),
    entry(ItemID.WOLF_MASK            , 1f / 1133f),
    entry(ItemID.WOLF_CLOAK           , 1f / 1133f),
    entry(ItemID.BLACK_LEPRECHAUN_HAT , 1f / 1133f),
    entry(ItemID.BLACK_UNICORN_MASK   , 1f / 2266f),
    entry(ItemID.WHITE_UNICORN_MASK   , 1f / 2266f),
    entry(ItemID.PURPLE_ELEGANT_SHIRT , 1f / 2266f),
    entry(ItemID.PURPLE_ELEGANT_BLOUSE, 1f / 2266f),
    entry(ItemID.PURPLE_ELEGANT_LEGS  , 1f / 2266f),
    entry(ItemID.PURPLE_ELEGANT_SKIRT , 1f / 2266f),
    entry(ItemID.BLACK_ELEGANT_SHIRT  , 1f / 2266f),
    entry(ItemID.WHITE_ELEGANT_BLOUSE , 1f / 2266f),
    entry(ItemID.BLACK_ELEGANT_LEGS   , 1f / 2266f),
    entry(ItemID.WHITE_ELEGANT_SKIRT  , 1f / 2266f),
    entry(ItemID.PINK_ELEGANT_SHIRT   , 1f / 2266f),
    entry(ItemID.PINK_ELEGANT_BLOUSE  , 1f / 2266f),
    entry(ItemID.PINK_ELEGANT_LEGS    , 1f / 2266f),
    entry(ItemID.PINK_ELEGANT_SKIRT   , 1f / 2266f),
    entry(ItemID.GOLD_ELEGANT_SHIRT   , 1f / 2266f),
    entry(ItemID.GOLD_ELEGANT_BLOUSE  , 1f / 2266f),
    entry(ItemID.GOLD_ELEGANT_LEGS    , 1f / 2266f),
    entry(ItemID.GOLD_ELEGANT_SKIRT   , 1f / 2266f),

    entry(ItemID.YEW_COMP_BOW     , 1f / 341f),
    entry(ItemID.STRENGTH_AMULET_T, 1f / 341f)
  );
  
  private static final Map<Integer, Float> TABLE_CLUE_SCROLL_HARD = Map.ofEntries(
    entry(ItemID.AMULET_OF_GLORY_T4             , 1f / 1625f),
    entry(ItemID.ROBIN_HOOD_HAT                 , 1f / 1625f),
    entry(ItemID.ENCHANTED_HAT                  , 1f / 1625f),
    entry(ItemID.ENCHANTED_TOP                  , 1f / 1625f),
    entry(ItemID.ENCHANTED_ROBE                 , 1f / 1625f),
    entry(ItemID.DRAGON_BOOTS_ORNAMENT_KIT      , 1f / 1625f),
    entry(ItemID.RUNE_FULL_HELM_T               , 1f / 1625f),
    entry(ItemID.RUNE_PLATEBODY_T               , 1f / 1625f),
    entry(ItemID.RUNE_PLATELEGS_T               , 1f / 1625f),
    entry(ItemID.RUNE_PLATESKIRT_T              , 1f / 1625f),
    entry(ItemID.RUNE_KITESHIELD_T              , 1f / 1625f),
    entry(ItemID.RUNE_FULL_HELM_G               , 1f / 1625f),
    entry(ItemID.RUNE_PLATEBODY_G               , 1f / 1625f),
    entry(ItemID.RUNE_PLATELEGS_G               , 1f / 1625f),
    entry(ItemID.RUNE_PLATESKIRT_G              , 1f / 1625f),
    entry(ItemID.RUNE_KITESHIELD_G              , 1f / 1625f),
    entry(ItemID.RUNE_SHIELD_H1                 , 1f / 1625f),
    entry(ItemID.RUNE_SHIELD_H2                 , 1f / 1625f),
    entry(ItemID.RUNE_SHIELD_H3                 , 1f / 1625f),
    entry(ItemID.RUNE_SHIELD_H4                 , 1f / 1625f),
    entry(ItemID.RUNE_SHIELD_H5                 , 1f / 1625f),
    entry(ItemID.RUNE_HELM_H1                   , 1f / 1625f),
    entry(ItemID.RUNE_HELM_H2                   , 1f / 1625f),
    entry(ItemID.RUNE_HELM_H3                   , 1f / 1625f),
    entry(ItemID.RUNE_HELM_H4                   , 1f / 1625f),
    entry(ItemID.RUNE_HELM_H5                   , 1f / 1625f),
    entry(ItemID.ZAMORAK_FULL_HELM              , 1f / 1625f),
    entry(ItemID.ZAMORAK_PLATEBODY              , 1f / 1625f),
    entry(ItemID.ZAMORAK_PLATELEGS              , 1f / 1625f),
    entry(ItemID.ZAMORAK_PLATESKIRT             , 1f / 1625f),
    entry(ItemID.ZAMORAK_KITESHIELD             , 1f / 1625f),
    entry(ItemID.GUTHIX_FULL_HELM               , 1f / 1625f),
    entry(ItemID.GUTHIX_PLATEBODY               , 1f / 1625f),
    entry(ItemID.GUTHIX_PLATELEGS               , 1f / 1625f),
    entry(ItemID.GUTHIX_PLATESKIRT              , 1f / 1625f),
    entry(ItemID.GUTHIX_KITESHIELD              , 1f / 1625f),
    entry(ItemID.SARADOMIN_FULL_HELM            , 1f / 1625f),
    entry(ItemID.SARADOMIN_PLATEBODY            , 1f / 1625f),
    entry(ItemID.SARADOMIN_PLATELEGS            , 1f / 1625f),
    entry(ItemID.SARADOMIN_PLATESKIRT           , 1f / 1625f),
    entry(ItemID.SARADOMIN_KITESHIELD           , 1f / 1625f),
    entry(ItemID.ANCIENT_FULL_HELM              , 1f / 1625f),
    entry(ItemID.ANCIENT_PLATEBODY              , 1f / 1625f),
    entry(ItemID.ANCIENT_PLATELEGS              , 1f / 1625f),
    entry(ItemID.ANCIENT_PLATESKIRT             , 1f / 1625f),
    entry(ItemID.ANCIENT_KITESHIELD             , 1f / 1625f),
    entry(ItemID.ARMADYL_FULL_HELM              , 1f / 1625f),
    entry(ItemID.ARMADYL_PLATEBODY              , 1f / 1625f),
    entry(ItemID.ARMADYL_PLATELEGS              , 1f / 1625f),
    entry(ItemID.ARMADYL_PLATESKIRT             , 1f / 1625f),
    entry(ItemID.ARMADYL_KITESHIELD             , 1f / 1625f),
    entry(ItemID.BANDOS_FULL_HELM               , 1f / 1625f),
    entry(ItemID.BANDOS_PLATEBODY               , 1f / 1625f),
    entry(ItemID.BANDOS_PLATELEGS               , 1f / 1625f),
    entry(ItemID.BANDOS_PLATESKIRT              , 1f / 1625f),
    entry(ItemID.BANDOS_KITESHIELD              , 1f / 1625f),
    entry(ItemID.RED_DHIDE_BODY_G               , 1f / 1625f),
    entry(ItemID.RED_DHIDE_BODY_T               , 1f / 1625f),
    entry(ItemID.RED_DHIDE_CHAPS_G              , 1f / 1625f),
    entry(ItemID.RED_DHIDE_CHAPS_T              , 1f / 1625f),
    entry(ItemID.BLUE_DHIDE_BODY_G              , 1f / 1625f),
    entry(ItemID.BLUE_DHIDE_BODY_T              , 1f / 1625f),
    entry(ItemID.BLUE_DHIDE_CHAPS_G             , 1f / 1625f),
    entry(ItemID.BLUE_DHIDE_CHAPS_T             , 1f / 1625f),
    entry(ItemID.SARADOMIN_COIF                 , 1f / 1625f),
    entry(ItemID.SARADOMIN_DHIDE_BODY           , 1f / 1625f),
    entry(ItemID.SARADOMIN_CHAPS                , 1f / 1625f),
    entry(ItemID.SARADOMIN_BRACERS              , 1f / 1625f),
    entry(ItemID.SARADOMIN_DHIDE_BOOTS          , 1f / 1625f),
    entry(ItemID.GUTHIX_COIF                    , 1f / 1625f),
    entry(ItemID.GUTHIX_DHIDE_BODY              , 1f / 1625f),
    entry(ItemID.GUTHIX_CHAPS                   , 1f / 1625f),
    entry(ItemID.GUTHIX_BRACERS                 , 1f / 1625f),
    entry(ItemID.GUTHIX_DHIDE_BOOTS             , 1f / 1625f),
    entry(ItemID.ZAMORAK_COIF                   , 1f / 1625f),
    entry(ItemID.ZAMORAK_DHIDE_BODY             , 1f / 1625f),
    entry(ItemID.ZAMORAK_CHAPS                  , 1f / 1625f),
    entry(ItemID.ZAMORAK_BRACERS                , 1f / 1625f),
    entry(ItemID.ZAMORAK_DHIDE_BOOTS            , 1f / 1625f),
    entry(ItemID.BANDOS_COIF                    , 1f / 1625f),
    entry(ItemID.BANDOS_DHIDE_BODY              , 1f / 1625f),
    entry(ItemID.BANDOS_CHAPS                   , 1f / 1625f),
    entry(ItemID.BANDOS_BRACERS                 , 1f / 1625f),
    entry(ItemID.BANDOS_DHIDE_BOOTS             , 1f / 1625f),
    entry(ItemID.ARMADYL_COIF                   , 1f / 1625f),
    entry(ItemID.ARMADYL_DHIDE_BODY             , 1f / 1625f),
    entry(ItemID.ARMADYL_CHAPS                  , 1f / 1625f),
    entry(ItemID.ARMADYL_BRACERS                , 1f / 1625f),
    entry(ItemID.ARMADYL_DHIDE_BOOTS            , 1f / 1625f),
    entry(ItemID.ANCIENT_COIF                   , 1f / 1625f),
    entry(ItemID.ANCIENT_DHIDE_BODY             , 1f / 1625f),
    entry(ItemID.ANCIENT_CHAPS                  , 1f / 1625f),
    entry(ItemID.ANCIENT_BRACERS                , 1f / 1625f),
    entry(ItemID.ANCIENT_DHIDE_BOOTS            , 1f / 1625f),
    entry(ItemID.SARADOMIN_STOLE                , 1f / 1625f),
    entry(ItemID.SARADOMIN_CROZIER              , 1f / 1625f),
    entry(ItemID.GUTHIX_STOLE                   , 1f / 1625f),
    entry(ItemID.GUTHIX_CROZIER                 , 1f / 1625f),
    entry(ItemID.ZAMORAK_STOLE                  , 1f / 1625f),
    entry(ItemID.ZAMORAK_CROZIER                , 1f / 1625f),
    entry(ItemID.ZOMBIE_HEAD                    , 1f / 1625f),
    entry(ItemID.CYCLOPS_HEAD                   , 1f / 1625f),
    entry(ItemID.PIRATES_HAT                    , 1f / 1625f),
    entry(ItemID.RED_CAVALIER                   , 1f / 1625f),
    entry(ItemID.WHITE_CAVALIER                 , 1f / 1625f),
    entry(ItemID.NAVY_CAVALIER                  , 1f / 1625f),
    entry(ItemID.TAN_CAVALIER                   , 1f / 1625f),
    entry(ItemID.DARK_CAVALIER                  , 1f / 1625f),
    entry(ItemID.BLACK_CAVALIER                 , 1f / 1625f),
    entry(ItemID.PITH_HELMET                    , 1f / 1625f),
    entry(ItemID.EXPLORER_BACKPACK              , 1f / 1625f),
    entry(ItemID.GREEN_DRAGON_MASK              , 1f / 1625f),
    entry(ItemID.BLUE_DRAGON_MASK               , 1f / 1625f),
    entry(ItemID.RED_DRAGON_MASK                , 1f / 1625f),
    entry(ItemID.BLACK_DRAGON_MASK              , 1f / 1625f),
    entry(ItemID.NUNCHAKU                       , 1f / 1625f),
    entry(ItemID.RUNE_CANE                      , 1f / 1625f),
    entry(ItemID.DUAL_SAI                       , 1f / 1625f),
    entry(ItemID.THIEVING_BAG                   , 1f / 1625f),
    entry(ItemID.RUNE_DEFENDER_ORNAMENT_KIT     , 1f / 1625f),
    entry(ItemID.BERSERKER_NECKLACE_ORNAMENT_KIT, 1f / 1625f),
    entry(ItemID.TZHAARKETOM_ORNAMENT_KIT       , 1f / 1625f),
    entry(ItemID.RUNE_PLATEBODY_H1              , 1f / 8125f),
    entry(ItemID.RUNE_PLATEBODY_H2              , 1f / 8125f),
    entry(ItemID.RUNE_PLATEBODY_H3              , 1f / 8125f),
    entry(ItemID.RUNE_PLATEBODY_H4              , 1f / 8125f),
    entry(ItemID.RUNE_PLATEBODY_H5              , 1f / 8125f),
    entry(ItemID.SARADOMIN_DHIDE_SHIELD         , 1f / 9750f),
    entry(ItemID.GUTHIX_DHIDE_SHIELD            , 1f / 9750f),
    entry(ItemID.ZAMORAK_DHIDE_SHIELD           , 1f / 9750f),
    entry(ItemID.BANDOS_DHIDE_SHIELD            , 1f / 9750f),
    entry(ItemID.ARMADYL_DHIDE_SHIELD           , 1f / 9750f),
    entry(ItemID.ANCIENT_DHIDE_SHIELD           , 1f / 9750f),

    entry(ItemID.SUPER_ENERGY4       , 1f / 16250f),
    entry(ItemID.SUPER_RESTORE4      , 1f / 16250f),
    entry(ItemID.ANTIFIRE_POTION4    , 1f / 16250f),
    entry(ItemID.SUPER_ATTACK4       , 1f / 16250f),
    entry(ItemID.SUPER_STRENGTH4     , 1f / 16250f),
    entry(ItemID.SUPER_DEFENCE4      , 1f / 16250f),
    entry(ItemID.GILDED_FULL_HELM    , 1f / 35750f),
    entry(ItemID.GILDED_PLATEBODY    , 1f / 35750f),
    entry(ItemID.GILDED_PLATELEGS    , 1f / 35750f),
    entry(ItemID.GILDED_PLATESKIRT   , 1f / 35750f),
    entry(ItemID.GILDED_KITESHIELD   , 1f / 35750f),
    entry(ItemID.GILDED_MED_HELM     , 1f / 35750f),
    entry(ItemID.GILDED_CHAINBODY    , 1f / 35750f),
    entry(ItemID.GILDED_SQ_SHIELD    , 1f / 35750f),
    entry(ItemID.GILDED_2H_SWORD     , 1f / 35750f),
    entry(ItemID.GILDED_SPEAR        , 1f / 35750f),
    entry(ItemID.GILDED_HASTA        , 1f / 35750f),
    entry(ItemID._3RD_AGE_FULL_HELMET, 1f / 211250f),
    entry(ItemID._3RD_AGE_PLATEBODY  , 1f / 211250f),
    entry(ItemID._3RD_AGE_PLATELEGS  , 1f / 211250f),
    entry(ItemID._3RD_AGE_PLATESKIRT , 1f / 211250f),
    entry(ItemID._3RD_AGE_KITESHIELD , 1f / 211250f),
    entry(ItemID._3RD_AGE_RANGE_COIF , 1f / 211250f),
    entry(ItemID._3RD_AGE_RANGE_TOP  , 1f / 211250f),
    entry(ItemID._3RD_AGE_RANGE_LEGS , 1f / 211250f),
    entry(ItemID._3RD_AGE_VAMBRACES  , 1f / 211250f),
    entry(ItemID._3RD_AGE_MAGE_HAT   , 1f / 211250f),
    entry(ItemID._3RD_AGE_ROBE_TOP   , 1f / 211250f),
    entry(ItemID._3RD_AGE_ROBE       , 1f / 211250f),
    entry(ItemID._3RD_AGE_AMULET     , 1f / 211250f),

    entry(ItemID.MAGIC_COMP_BOW, 1f / 270.8f),

    entry(ItemID.RED_FIRELIGHTER                    , 1f / 135.4f),
    entry(ItemID.GREEN_FIRELIGHTER                  , 1f / 135.4f),
    entry(ItemID.BLUE_FIRELIGHTER                   , 1f / 135.4f),
    entry(ItemID.PURPLE_FIRELIGHTER                 , 1f / 135.4f),
    entry(ItemID.WHITE_FIRELIGHTER                  , 1f / 135.4f),
    entry(ItemID.CHARGE_DRAGONSTONE_JEWELLERY_SCROLL, 1f / 340.5f),
    entry(ItemID.NARDAH_TELEPORT                    , 1f / 340.5f),
    entry(ItemID.MOS_LEHARMLESS_TELEPORT            , 1f / 340.5f),
    entry(ItemID.MORTTON_TELEPORT                   , 1f / 340.5f),
    entry(ItemID.FELDIP_HILLS_TELEPORT              , 1f / 340.5f),
    entry(ItemID.LUNAR_ISLE_TELEPORT                , 1f / 340.5f),
    entry(ItemID.DIGSITE_TELEPORT                   , 1f / 340.5f),
    entry(ItemID.PISCATORIS_TELEPORT                , 1f / 340.5f),
    entry(ItemID.PEST_CONTROL_TELEPORT              , 1f / 340.5f),
    entry(ItemID.TAI_BWO_WANNAI_TELEPORT            , 1f / 340.5f),
    entry(ItemID.LUMBERYARD_TELEPORT                , 1f / 340.5f),
    entry(ItemID.IORWERTH_CAMP_TELEPORT             , 1f / 340.5f),
    entry(ItemID.HOLY_BLESSING                      , 1f / 541.7f),
    entry(ItemID.UNHOLY_BLESSING                    , 1f / 541.7f),
    entry(ItemID.PEACEFUL_BLESSING                  , 1f / 541.7f),
    entry(ItemID.WAR_BLESSING                       , 1f / 541.7f),
    entry(ItemID.HONOURABLE_BLESSING                , 1f / 541.7f),
    entry(ItemID.ANCIENT_BLESSING                   , 1f / 541.7f),
    entry(ItemID.MASTER_SCROLL_BOOK_EMPTY           , 1f / 595.8f),
    entry(ItemID.SARADOMIN_PAGE_1                   , 1f / 650f),
    entry(ItemID.SARADOMIN_PAGE_2                   , 1f / 650f),
    entry(ItemID.SARADOMIN_PAGE_3                   , 1f / 650f),
    entry(ItemID.SARADOMIN_PAGE_4                   , 1f / 650f),
    entry(ItemID.ZAMORAK_PAGE_1                     , 1f / 650f),
    entry(ItemID.ZAMORAK_PAGE_2                     , 1f / 650f),
    entry(ItemID.ZAMORAK_PAGE_3                     , 1f / 650f),
    entry(ItemID.ZAMORAK_PAGE_4                     , 1f / 650f),
    entry(ItemID.GUTHIX_PAGE_1                      , 1f / 650f),
    entry(ItemID.GUTHIX_PAGE_2                      , 1f / 650f),
    entry(ItemID.GUTHIX_PAGE_3                      , 1f / 650f),
    entry(ItemID.GUTHIX_PAGE_4                      , 1f / 650f),
    entry(ItemID.BANDOS_PAGE_1                      , 1f / 650f),
    entry(ItemID.BANDOS_PAGE_2                      , 1f / 650f),
    entry(ItemID.BANDOS_PAGE_3                      , 1f / 650f),
    entry(ItemID.BANDOS_PAGE_4                      , 1f / 650f),
    entry(ItemID.ARMADYL_PAGE_1                     , 1f / 650f),
    entry(ItemID.ARMADYL_PAGE_2                     , 1f / 650f),
    entry(ItemID.ARMADYL_PAGE_3                     , 1f / 650f),
    entry(ItemID.ARMADYL_PAGE_4                     , 1f / 650f),
    entry(ItemID.ANCIENT_PAGE_1                     , 1f / 650f),
    entry(ItemID.ANCIENT_PAGE_2                     , 1f / 650f),
    entry(ItemID.ANCIENT_PAGE_3                     , 1f / 650f),
    entry(ItemID.ANCIENT_PAGE_4                     , 1f / 650f)
  );
  
  private static final Map<Integer, Float> TABLE_CLUE_SCROLL_ELITE = Map.ofEntries(
    entry(ItemID.DRAGON_FULL_HELM_ORNAMENT_KIT, 1f / 1250f),
    entry(ItemID.DRAGON_CHAINBODY_ORNAMENT_KIT, 1f / 1250f),
    entry(ItemID.DRAGON_LEGSSKIRT_ORNAMENT_KIT, 1  / 1250f),
    entry(ItemID.DRAGON_SQ_SHIELD_ORNAMENT_KIT, 1f / 1250f),
    entry(ItemID.DRAGON_SCIMITAR_ORNAMENT_KIT , 1f / 1250f),
    entry(ItemID.FURY_ORNAMENT_KIT            , 1f / 1250f),
    entry(ItemID.LIGHT_INFINITY_COLOUR_KIT    , 1f / 1250f),
    entry(ItemID.DARK_INFINITY_COLOUR_KIT     , 1f / 1250f),
    entry(ItemID.ROYAL_CROWN                  , 1f / 1250f),
    entry(ItemID.ROYAL_GOWN_TOP               , 1f / 1250f),
    entry(ItemID.ROYAL_GOWN_BOTTOM            , 1f / 1250f),
    entry(ItemID.ROYAL_SCEPTRE                , 1f / 1250f),
    entry(ItemID.MUSKETEER_HAT                , 1f / 1250f),
    entry(ItemID.MUSKETEER_TABARD             , 1f / 1250f),
    entry(ItemID.MUSKETEER_PANTS              , 1f / 1250f),
    entry(ItemID.BLACK_DHIDE_BODY_G           , 1f / 1250f),
    entry(ItemID.BLACK_DHIDE_BODY_T           , 1f / 1250f),
    entry(ItemID.BLACK_DHIDE_CHAPS_G          , 1f / 1250f),
    entry(ItemID.BLACK_DHIDE_CHAPS_T          , 1f / 1250f),
    entry(ItemID.RANGERS_TUNIC                , 1f / 1250f),
    entry(ItemID.RANGER_GLOVES                , 1f / 1250f),
    entry(ItemID.HOLY_WRAPS                   , 1f / 1250f),
    entry(ItemID.BRONZE_DRAGON_MASK           , 1f / 1250f),
    entry(ItemID.IRON_DRAGON_MASK             , 1f / 1250f),
    entry(ItemID.STEEL_DRAGON_MASK            , 1f / 1250f),
    entry(ItemID.MITHRIL_DRAGON_MASK          , 1f / 1250f),
    entry(ItemID.ADAMANT_DRAGON_MASK          , 1f / 1250f),
    entry(ItemID.RUNE_DRAGON_MASK             , 1f / 1250f),
    entry(ItemID.ARCEUUS_SCARF                , 1f / 1250f),
    entry(ItemID.HOSIDIUS_SCARF               , 1f / 1250f),
    entry(ItemID.LOVAKENGJ_SCARF              , 1f / 1250f),
    entry(ItemID.PISCARILIUS_SCARF            , 1f / 1250f),
    entry(ItemID.SHAYZIEN_SCARF               , 1f / 1250f),
    entry(ItemID.KATANA                       , 1f / 1250f),
    entry(ItemID.DRAGON_CANE                  , 1f / 1250f),
    entry(ItemID.BUCKET_HELM                  , 1f / 1250f),
    entry(ItemID.BLACKSMITHS_HELM             , 1f / 1250f),
    entry(ItemID.DEERSTALKER                  , 1f / 1250f),
    entry(ItemID.AFRO                         , 1f / 1250f),
    entry(ItemID.BIG_PIRATE_HAT               , 1f / 1250f),
    entry(ItemID.TOP_HAT                      , 1f / 1250f),
    entry(ItemID.MONOCLE                      , 1f / 1250f),
    entry(ItemID.BRIEFCASE                    , 1f / 1250f),
    entry(ItemID.SAGACIOUS_SPECTACLES         , 1f / 1250f),
    entry(ItemID.RANGERS_TIGHTS               , 1f / 1250f),
    entry(ItemID.URIS_HAT                     , 1f / 1250f),
    entry(ItemID.GIANT_BOOT                   , 1f / 1250f),
    entry(ItemID.FREMENNIK_KILT               , 1f / 1250f),
    entry(ItemID.DARK_BOW_TIE                 , 1f / 12500f),
    entry(ItemID.DARK_TUXEDO_JACKET           , 1f / 12500f),
    entry(ItemID.DARK_TUXEDO_CUFFS            , 1f / 12500f),
    entry(ItemID.DARK_TROUSERS                , 1f / 12500f),
    entry(ItemID.DARK_TUXEDO_SHOES            , 1f / 12500f),
    entry(ItemID.LIGHT_BOW_TIE                , 1f / 12500f),
    entry(ItemID.LIGHT_TUXEDO_JACKET          , 1f / 12500f),
    entry(ItemID.LIGHT_TUXEDO_CUFFS           , 1f / 12500f),
    entry(ItemID.LIGHT_TROUSERS               , 1f / 12500f),
    entry(ItemID.LIGHT_TUXEDO_SHOES           , 1f / 12500f),

    entry(ItemID.RING_OF_NATURE        , 1f / 28750f),
    entry(ItemID.CRYSTAL_KEY           , 1f / 28750f),
    entry(ItemID.LAVA_DRAGON_MASK      , 1f / 28750f),
    entry(ItemID.BATTLESTAFF           , 1f / 28750f),
    entry(ItemID.EXTENDED_ANTIFIRE4    , 1f / 28750f),
    entry(ItemID.SUPER_RESTORE4        , 1f / 28750f),
    entry(ItemID.SARADOMIN_BREW4       , 1f / 28750f),
    entry(ItemID.RANGING_POTION4       , 1f / 28750f),
    entry(ItemID.GILDED_SCIMITAR       , 1f / 28750f),
    entry(ItemID.GILDED_BOOTS          , 1f / 28750f),
    entry(ItemID.GILDED_COIF           , 1f / 28750f),
    entry(ItemID.GILDED_DHIDE_VAMBRACES, 1f / 28750f),
    entry(ItemID.GILDED_DHIDE_BODY     , 1f / 28750f),
    entry(ItemID.GILDED_DHIDE_CHAPS    , 1f / 28750f),
    entry(ItemID.GILDED_PICKAXE        , 1f / 28750f),
    entry(ItemID.GILDED_AXE            , 1f / 28750f),
    entry(ItemID.GILDED_SPADE          , 1f / 28750f),
    entry(ItemID.GILDED_FULL_HELM      , 1f / 63250f),
    entry(ItemID.GILDED_PLATEBODY      , 1f / 63250f),
    entry(ItemID.GILDED_PLATELEGS      , 1f / 63250f),
    entry(ItemID.GILDED_PLATESKIRT     , 1f / 63250f),
    entry(ItemID.GILDED_KITESHIELD     , 1f / 63250f),
    entry(ItemID.GILDED_MED_HELM       , 1f / 63250f),
    entry(ItemID.GILDED_CHAINBODY      , 1f / 63250f),
    entry(ItemID.GILDED_SQ_SHIELD      , 1f / 63250f),
    entry(ItemID.GILDED_2H_SWORD       , 1f / 63250f),
    entry(ItemID.GILDED_SPEAR          , 1f / 63250f),
    entry(ItemID.GILDED_HASTA          , 1f / 63250f),
    entry(ItemID._3RD_AGE_FULL_HELMET  , 1f / 488750f),
    entry(ItemID._3RD_AGE_PLATEBODY    , 1f / 488750f),
    entry(ItemID._3RD_AGE_PLATELEGS    , 1f / 488750f),
    entry(ItemID._3RD_AGE_PLATESKIRT   , 1f / 488750f),
    entry(ItemID._3RD_AGE_KITESHIELD   , 1f / 488750f),
    entry(ItemID._3RD_AGE_RANGE_COIF   , 1f / 488750f),
    entry(ItemID._3RD_AGE_RANGE_TOP    , 1f / 488750f),
    entry(ItemID._3RD_AGE_RANGE_LEGS   , 1f / 488750f),
    entry(ItemID._3RD_AGE_VAMBRACES    , 1f / 488750f),
    entry(ItemID._3RD_AGE_MAGE_HAT     , 1f / 488750f),
    entry(ItemID._3RD_AGE_ROBE_TOP     , 1f / 488750f),
    entry(ItemID._3RD_AGE_ROBE         , 1f / 488750f),
    entry(ItemID._3RD_AGE_AMULET       , 1f / 488750f),
    entry(ItemID._3RD_AGE_LONGSWORD    , 1f / 488750f),
    entry(ItemID._3RD_AGE_WAND         , 1f / 488750f),
    entry(ItemID._3RD_AGE_CLOAK        , 1f / 488750f),
    entry(ItemID._3RD_AGE_BOW          , 1f / 488750f),
    
    entry(ItemID.RING_OF_3RD_AGE   , 1f / 44f),
    entry(ItemID.TOOTH_HALF_OF_KEY , 1f / 64.6f),
    entry(ItemID.LOOP_HALF_OF_KEY  , 1f / 64.6f),
    entry(ItemID.PALM_TREE_SEED    , 1f / 96.9f),
    entry(ItemID.YEW_SEED          , 1f / 96.9f),
    entry(ItemID.MAGIC_SEED        , 1f / 96.9f)
  );
  
  private static final Map<Integer, Float> TABLE_CLUE_SCROLL_MASTER = Map.ofEntries(
    entry(ItemID.OCCULT_ORNAMENT_KIT            , 1f / 851f),
    entry(ItemID.TORTURE_ORNAMENT_KIT           , 1f / 851f),
    entry(ItemID.ANGUISH_ORNAMENT_KIT           , 1f / 851f),
    entry(ItemID.TORMENTED_ORNAMENT_KIT         , 1f / 851f),
    entry(ItemID.DRAGON_DEFENDER_ORNAMENT_KIT   , 1f / 851f),
    entry(ItemID.HOOD_OF_DARKNESS               , 1f / 851f),
    entry(ItemID.ROBE_TOP_OF_DARKNESS           , 1f / 851f),
    entry(ItemID.GLOVES_OF_DARKNESS             , 1f / 851f),
    entry(ItemID.ROBE_BOTTOM_OF_DARKNESS        , 1f / 851f),
    entry(ItemID.BOOTS_OF_DARKNESS              , 1f / 851f),
    entry(ItemID.SAMURAI_KASA                   , 1f / 851f),
    entry(ItemID.SAMURAI_SHIRT                  , 1f / 851f),
    entry(ItemID.SAMURAI_GLOVES                 , 1f / 851f),
    entry(ItemID.SAMURAI_GREAVES                , 1f / 851f),
    entry(ItemID.SAMURAI_BOOTS                  , 1f / 851f),
    entry(ItemID.ARCEUUS_HOOD                   , 1f / 851f),
    entry(ItemID.HOSIDIUS_HOOD                  , 1f / 851f),
    entry(ItemID.LOVAKENGJ_HOOD                 , 1f / 851f),
    entry(ItemID.PISCARILIUS_HOOD               , 1f / 851f),
    entry(ItemID.SHAYZIEN_HOOD                  , 1f / 851f),
    entry(ItemID.OLD_DEMON_MASK                 , 1f / 851f),
    entry(ItemID.LESSER_DEMON_MASK              , 1f / 851f),
    entry(ItemID.GREATER_DEMON_MASK             , 1f / 851f),
    entry(ItemID.BLACK_DEMON_MASK               , 1f / 851f),
    entry(ItemID.JUNGLE_DEMON_MASK              , 1f / 851f),
    entry(ItemID.LEFT_EYE_PATCH                 , 1f / 851f),
    entry(ItemID.BOWL_WIG                       , 1f / 851f),
    entry(ItemID.ALE_OF_THE_GODS                , 1f / 851f),
    entry(ItemID.OBSIDIAN_CAPE_R                , 1f / 851f),
    entry(ItemID.FANCY_TIARA                    , 1f / 851f),
    entry(ItemID.HALF_MOON_SPECTACLES           , 1f / 851f),
    entry(ItemID.ARMADYL_GODSWORD_ORNAMENT_KIT  , 1f / 340f),
    entry(ItemID.BANDOS_GODSWORD_ORNAMENT_KIT   , 1f / 340f),
    entry(ItemID.SARADOMIN_GODSWORD_ORNAMENT_KIT, 1f / 340f),
    entry(ItemID.ZAMORAK_GODSWORD_ORNAMENT_KIT  , 1f / 340f),
    entry(ItemID.DRAGON_PLATEBODY_ORNAMENT_KIT  , 1f / 12765f),
    entry(ItemID.ANKOU_MASK                     , 1f / 12765f),
    entry(ItemID.ANKOU_TOP                      , 1f / 12765f),
    entry(ItemID.ANKOU_GLOVES                   , 1f / 12765f),
    entry(ItemID.ANKOUS_LEGGINGS                , 1f / 12765f),
    entry(ItemID.ANKOU_SOCKS                    , 1f / 12765f),
    entry(ItemID.MUMMYS_HEAD                    , 1f / 12765f),
    entry(ItemID.MUMMYS_BODY                    , 1f / 12765f),
    entry(ItemID.MUMMYS_HANDS                   , 1f / 12765f),
    entry(ItemID.MUMMYS_LEGS                    , 1f / 12765f),
    entry(ItemID.MUMMYS_FEET                    , 1f / 12765f),
    entry(ItemID.DRAGON_KITESHIELD_ORNAMENT_KIT , 1f / 25530f),

    entry(ItemID.BUCKET_HELM_G                 , 1f / 13616f),
    entry(ItemID.RING_OF_COINS                 , 1f / 13616f),
    entry(ItemID.CABBAGE                       , 1f / 13616f),
    entry(ItemID.ANTIVENOM4                    , 1f / 13616f),
    entry(ItemID.TORSTOL                       , 1f / 13616f),
    entry(ItemID.GILDED_SCIMITAR               , 1f / 13616f),
    entry(ItemID.GILDED_BOOTS                  , 1f / 13616f),
    entry(ItemID.GILDED_COIF                   , 1f / 13616f),
    entry(ItemID.GILDED_DHIDE_VAMBRACES        , 1f / 13616f),
    entry(ItemID.GILDED_DHIDE_BODY             , 1f / 13616f),
    entry(ItemID.GILDED_DHIDE_CHAPS            , 1f / 13616f),
    entry(ItemID.GILDED_PICKAXE                , 1f / 13616f),
    entry(ItemID.GILDED_AXE                    , 1f / 13616f),
    entry(ItemID.GILDED_SPADE                  , 1f / 13616f),
    entry(ItemID.GILDED_FULL_HELM              , 1f / 149776f),
    entry(ItemID.GILDED_PLATEBODY              , 1f / 149776f),
    entry(ItemID.GILDED_PLATELEGS              , 1f / 149776f),
    entry(ItemID.GILDED_PLATESKIRT             , 1f / 149776f),
    entry(ItemID.GILDED_KITESHIELD             , 1f / 149776f),
    entry(ItemID.GILDED_MED_HELM               , 1f / 149776f),
    entry(ItemID.GILDED_CHAINBODY              , 1f / 149776f),
    entry(ItemID.GILDED_SQ_SHIELD              , 1f / 149776f),
    entry(ItemID.GILDED_2H_SWORD               , 1f / 149776f),
    entry(ItemID.GILDED_SPEAR                  , 1f / 149776f),
    entry(ItemID.GILDED_HASTA                  , 1f / 149776f),
    entry(ItemID._3RD_AGE_FULL_HELMET          , 1f / 313168f),
    entry(ItemID._3RD_AGE_PLATEBODY            , 1f / 313168f),
    entry(ItemID._3RD_AGE_PLATELEGS            , 1f / 313168f),
    entry(ItemID._3RD_AGE_PLATESKIRT           , 1f / 313168f),
    entry(ItemID._3RD_AGE_KITESHIELD           , 1f / 313168f),
    entry(ItemID._3RD_AGE_RANGE_COIF           , 1f / 313168f),
    entry(ItemID._3RD_AGE_RANGE_TOP            , 1f / 313168f),
    entry(ItemID._3RD_AGE_RANGE_LEGS           , 1f / 313168f),
    entry(ItemID._3RD_AGE_VAMBRACES            , 1f / 313168f),
    entry(ItemID._3RD_AGE_MAGE_HAT             , 1f / 313168f),
    entry(ItemID._3RD_AGE_ROBE_TOP             , 1f / 313168f),
    entry(ItemID._3RD_AGE_ROBE                 , 1f / 313168f),
    entry(ItemID._3RD_AGE_AMULET               , 1f / 313168f),
    entry(ItemID._3RD_AGE_DRUIDIC_ROBE_TOP     , 1f / 313168f),
    entry(ItemID._3RD_AGE_DRUIDIC_ROBE_BOTTOMS , 1f / 313168f),
    entry(ItemID._3RD_AGE_DRUIDIC_CLOAK        , 1f / 313168f),
    entry(ItemID._3RD_AGE_LONGSWORD            , 1f / 313168f),
    entry(ItemID._3RD_AGE_BOW                  , 1f / 313168f),
    entry(ItemID._3RD_AGE_WAND                 , 1f / 313168f),
    entry(ItemID._3RD_AGE_DRUIDIC_STAFF        , 1f / 313168f),
    entry(ItemID._3RD_AGE_CLOAK                , 1f / 313168f),
    entry(ItemID._3RD_AGE_PICKAXE              , 1f / 313168f),
    entry(ItemID._3RD_AGE_AXE                  , 1f / 313168f),

    entry(ItemID.RING_OF_3RD_AGE   , 1f / 40f),
    entry(ItemID.TOOTH_HALF_OF_KEY , 1f / 60.6f),
    entry(ItemID.LOOP_HALF_OF_KEY  , 1f / 60.6f),
    entry(ItemID.PALM_TREE_SEED    , 1f / 91f),
    entry(ItemID.YEW_SEED          , 1f / 91f),
    entry(ItemID.MAGIC_SEED        , 1f / 91f),

    entry(ItemID.RED_FIRELIGHTER                    , 1f / 151.6f),
    entry(ItemID.GREEN_FIRELIGHTER                  , 1f / 151.6f),
    entry(ItemID.BLUE_FIRELIGHTER                   , 1f / 151.6f),
    entry(ItemID.PURPLE_FIRELIGHTER                 , 1f / 151.6f),
    entry(ItemID.WHITE_FIRELIGHTER                  , 1f / 151.6f),
    entry(ItemID.CHARGE_DRAGONSTONE_JEWELLERY_SCROLL, 1f / 190.6f),
    entry(ItemID.NARDAH_TELEPORT                    , 1f / 190.6f),
    entry(ItemID.MOS_LEHARMLESS_TELEPORT            , 1f / 190.6f),
    entry(ItemID.MORTTON_TELEPORT                   , 1f / 190.6f),
    entry(ItemID.FELDIP_HILLS_TELEPORT              , 1f / 190.6f),
    entry(ItemID.LUNAR_ISLE_TELEPORT                , 1f / 190.6f),
    entry(ItemID.DIGSITE_TELEPORT                   , 1f / 190.6f),
    entry(ItemID.PISCATORIS_TELEPORT                , 1f / 190.6f),
    entry(ItemID.PEST_CONTROL_TELEPORT              , 1f / 190.6f),
    entry(ItemID.TAI_BWO_WANNAI_TELEPORT            , 1f / 190.6f),
    entry(ItemID.LUMBERYARD_TELEPORT                , 1f / 190.6f),
    entry(ItemID.IORWERTH_CAMP_TELEPORT             , 1f / 190.6f),
    entry(ItemID.MASTER_SCROLL_BOOK_EMPTY           , 1f / 333.5f),
    entry(ItemID.HOLY_BLESSING                      , 1f / 606.4f),
    entry(ItemID.UNHOLY_BLESSING                    , 1f / 606.4f),
    entry(ItemID.PEACEFUL_BLESSING                  , 1f / 606.4f),
    entry(ItemID.WAR_BLESSING                       , 1f / 606.4f),
    entry(ItemID.HONOURABLE_BLESSING                , 1f / 606.4f),
    entry(ItemID.ANCIENT_BLESSING                   , 1f / 606.4f),
    entry(ItemID.SARADOMIN_PAGE_1                   , 1f / 702.6f),
    entry(ItemID.SARADOMIN_PAGE_2                   , 1f / 702.6f),
    entry(ItemID.SARADOMIN_PAGE_3                   , 1f / 702.6f),
    entry(ItemID.SARADOMIN_PAGE_4                   , 1f / 702.6f),
    entry(ItemID.ZAMORAK_PAGE_1                     , 1f / 702.6f),
    entry(ItemID.ZAMORAK_PAGE_2                     , 1f / 702.6f),
    entry(ItemID.ZAMORAK_PAGE_3                     , 1f / 702.6f),
    entry(ItemID.ZAMORAK_PAGE_4                     , 1f / 702.6f),
    entry(ItemID.GUTHIX_PAGE_1                      , 1f / 702.6f),
    entry(ItemID.GUTHIX_PAGE_2                      , 1f / 702.6f),
    entry(ItemID.GUTHIX_PAGE_3                      , 1f / 702.6f),
    entry(ItemID.GUTHIX_PAGE_4                      , 1f / 702.6f),
    entry(ItemID.BANDOS_PAGE_1                      , 1f / 702.6f),
    entry(ItemID.BANDOS_PAGE_2                      , 1f / 702.6f),
    entry(ItemID.BANDOS_PAGE_3                      , 1f / 702.6f),
    entry(ItemID.BANDOS_PAGE_4                      , 1f / 702.6f),
    entry(ItemID.ARMADYL_PAGE_1                     , 1f / 702.6f),
    entry(ItemID.ARMADYL_PAGE_2                     , 1f / 702.6f),
    entry(ItemID.ARMADYL_PAGE_3                     , 1f / 702.6f),
    entry(ItemID.ARMADYL_PAGE_4                     , 1f / 702.6f),
    entry(ItemID.ANCIENT_PAGE_1                     , 1f / 702.6f),
    entry(ItemID.ANCIENT_PAGE_2                     , 1f / 702.6f),
    entry(ItemID.ANCIENT_PAGE_3                     , 1f / 702.6f),
    entry(ItemID.ANCIENT_PAGE_4                     , 1f / 702.6f)
  );

  private static final Map<Integer, Float> TABLE_BRIMSTONE_CHEST = Map.ofEntries(
    entry(ItemID.BROKEN_DRAGON_HASTA    , 1f / 200f),
    entry(ItemID.MYSTIC_HAT_DUSK        , 1f / 1000f),
    entry(ItemID.MYSTIC_ROBE_TOP_DUSK   , 1f / 1000f),
    entry(ItemID.MYSTIC_ROBE_BOTTOM_DUSK, 1f / 1000f),
    entry(ItemID.MYSTIC_GLOVES_DUSK     , 1f / 1000f),
    entry(ItemID.MYSTIC_BOOTS_DUSK      , 1f / 1000f)
  );

  private static final Map<Integer, Float> TABLE_LARRANS_BIG_CHEST = Map.ofEntries(
    entry(ItemID.DAGONHAI_HAT        , 1f / 256f),
    entry(ItemID.DAGONHAI_ROBE_TOP   , 1f / 256f),
    entry(ItemID.DAGONHAI_ROBE_BOTTOM, 1f / 256f)
    
  );

  private static final Map<Integer, Float> TABLE_THE_GAUNTLET = Map.ofEntries(
    entry(ItemID.CRYSTAL_WEAPON_SEED      , 1f / 120f),
    entry(ItemID.CRYSTAL_ARMOUR_SEED      , 1f / 120f),
    entry(ItemID.BLADE_OF_SAELDOR_INACTIVE, 1f / 2000f)
    
  );

  private static final Map<Integer, Float> TABLE_ELVEN_CRYSTAL_CHEST = Map.ofEntries(
    entry(ItemID.UNCUT_ONYX            , 1f / 10000f),
    entry(ItemID.DRAGONSTONE_FULL_HELM , 1f / 2500f),
    entry(ItemID.DRAGONSTONE_PLATEBODY , 1f / 2500f),
    entry(ItemID.DRAGONSTONE_PLATELEGS , 1f / 2500f),
    entry(ItemID.DRAGONSTONE_GAUNTLETS , 1f / 2500f),
    entry(ItemID.DRAGONSTONE_BOOTS     , 1f / 2500f),
    entry(ItemID.DRAGON_PLATELEGS      , 1f / 2500f),
    entry(ItemID.DRAGON_PLATESKIRT     , 1f / 2500f),
    entry(ItemID.SHIELD_LEFT_HALF      , 1f / 2500f)
  );

  private static final Map<Integer, Float> TABLE_CRYSTAL_CHEST = Map.ofEntries(
    entry(ItemID.ADAMANT_SQ_SHIELD, 1f / 64f),
    entry(ItemID.RUNE_PLATELEGS   , 1f / 128f),
    entry(ItemID.RUNE_PLATESKIRT  , 1f / 128f)
  );

  public static final Map<String, Map<Integer, Float>> EVENT_TABLE_MAPPING = Map.ofEntries(
    entry("barrows"                , TABLE_BARROWS              ),
    entry("chambers of xeric"      , TABLE_CHAMBERS_OF_XERIC    ),
    entry("theatre of blood"       , TABLE_THEATRE_OF_BLOOD     ),
    entry("clue scroll (beginner)" , TABLE_CLUE_SCROLL_BEGINNER ),
    entry("clue scroll (easy)"     , TABLE_CLUE_SCROLL_EASY     ),
    entry("clue scroll (medium)"   , TABLE_CLUE_SCROLL_MEDIUM   ),
    entry("clue scroll (hard)"     , TABLE_CLUE_SCROLL_HARD     ),
    entry("clue scroll (elite)"    , TABLE_CLUE_SCROLL_ELITE    ),
    entry("clue scroll (master)"   , TABLE_CLUE_SCROLL_MASTER   ),
    entry("brimstone chest"        , TABLE_BRIMSTONE_CHEST      ),
    entry("larran's big chest"     , TABLE_LARRANS_BIG_CHEST    ),
    entry("the gauntlet"           , TABLE_THE_GAUNTLET         ),
    entry("elven crystal chest"    , TABLE_ELVEN_CRYSTAL_CHEST  ),
    entry("crystal chest"          , TABLE_CRYSTAL_CHEST        )
  );

  // TODO: Pets
}
